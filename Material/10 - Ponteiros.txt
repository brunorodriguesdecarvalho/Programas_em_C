// ILP-010 (Prof. Dr. Silvio do Lago Pereira)

//------------------------------------------------------------
// Exemplo 1
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   int v=5, *p;
   p = &v;
   printf("Valor guardado: %P\n",p);
   printf("Valor apontado: %d\n",*p);
   return 0;
}

//------------------------------------------------------------
// Exercicio 1
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   char x = 'A';
   char *p = &x;
   *p = *p + 3; 
   printf("%c\n",x);
   return 0;
}

//------------------------------------------------------------
// Exercicio 2
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   float x=2.0, y=3.5;
   float *p=&x, *q=&y;
   printf("%.1f\n",*p**q);
   return 0;
}

//------------------------------------------------------------
// Exemplo 2
//------------------------------------------------------------

#include <stdio.h>

void troca(int p,int q) {
   int x = p;
   p = q;
   q = x;
}

int main(void) {
   int a=5, b=3;
   troca(a,b);
   printf("a=%d b=%d\n",a,b);
   return 0;
}

//------------------------------------------------------------
// Exemplo 3
//------------------------------------------------------------

#include <stdio.h>

void troca(int *p,int *q) {
   int x = *p;
   *p = *q;
   *q = x;
}

int main(void) {
   int a=5, b=3;
   troca(&a,&b);
   printf("a=%d b=%d\n",a,b);
   return 0;
}

//------------------------------------------------------------
// Exercicio 3
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   int v[5] = {26,55,89,14,77};
   int min, max,
   minimax(v,5,&min,&max);
   printf("Min: %d\n",min);
   printf("Max: %d\n",max);
   return 0;
}

//------------------------------------------------------------
// Exemplo 4
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   int v = 5;
   printf("Endereco de v: %P\n",&v);
   printf("Valor de v: %d\n",*(&v));
   return 0;
}

//------------------------------------------------------------
// Exemplo 5
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   int v[3] = {55,79,46};
   printf("Endereco do vetor: %P\n",v);
   printf("Valor no endereco: %d\n",*v);
   return 0;
}

//------------------------------------------------------------
// Exemplo 6
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   printf("Endereco da cadeia: %P\n","UM");
   printf("Valor no endereco: %c\n",*"UM");
   return 0;
}

//------------------------------------------------------------
// Exemplo 7
//------------------------------------------------------------

#include <stdio.h>

void exibe(int *p,int n) {
   for(int i=0; i<n; i++)
      printf("%d\n",p[i]);
}

int main(void) {
   int v[3] = {55,79,46};
   exibe(v,3);
   return 0;
}

//------------------------------------------------------------
// Exemplo 8
//------------------------------------------------------------

#include <stdio.h>
int main(void) {
   int v[5] = {27,55,18,34,47};
   int *p = v, *q = v+3;
   printf("v  : %P\n",v);
   printf("p  : %P\n",p);
   printf("q  : %P\n",q);
   printf("p+1: %P\n",p+1);
   printf("q-1: %P\n",q-1);
   printf("q-p: %ld\n",q-p+1);
   return 0;
}


//------------------------------------------------------------
// Exemplo 9
//------------------------------------------------------------

#include <stdio.h>

void putstr(char *s) {
   while( *s ) {
     putchar(*s);
     s++;
   }
}

int main(void) {
   putstr("Oi!\n");
   return 0;
}

//------------------------------------------------------------
// Exercicio 4
//------------------------------------------------------------

#include <stdio.h>
int main(void) {
   printf("%d\n",len("teste"));
   return 0;
}

//------------------------------------------------------------
// Exercicio 5
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   float v[3] = {2.5,1.5,3.0};
   printf("%.1f\n",soma(v,3));
   return 0;
}

//------------------------------------------------------------
// Exemplo 10
//------------------------------------------------------------

#include <stdio.h>

char *pos(char c,char *s) {
   while( *s && *s!=c ) s++;
   return (*s ? s : NULL);
}

int main(void) {
   char *s = "banana";
   printf("Endereco do vetor.: %P\n",s);
   printf("Posicao da letra n: %P\n",pos('n',s));
   printf("Posicao da letra x: %P\n",pos('x',s));
   return 0;
}

//------------------------------------------------------------
// Exemplo 11
//------------------------------------------------------------

#include <stdio.h>

double media(int n,...) {
   double s = 0;
   double *p = (double *)(&n + 1);
   for(int i=0; i<n; i++) s += p[i];
   return s/n;
}

int main(void) {
   double m = media(4,2.5,6.7,1.3,1.5);
   printf("Media: %.1f\n",m);
   return 0;
}

//------------------------------------------------------------
// Exemplo 12
//------------------------------------------------------------

#include <stdio.h>

typedef struct { int x; int y; } Ponto;

void move(Ponto *q,int dx,int dy) {
   (*q).x += dx;
   (*q).y += dy;
}

int main(void) {
   Ponto p = {30,44};
   move(&p,1,-4);
   printf("Posicao: %d,%d\n",p.x,p.y);
   return 0;
}

//------------------------------------------------------------
// Exemplo 13
//------------------------------------------------------------

#include <stdio.h>

typedef struct { int x; int y; } Ponto;

void move(Ponto *q,int dx,int dy) {
   q->x += dx;
   q->y += dy;
}

int main(void) {
   Ponto p = {30,44};
   move(&p,1,-4);
   printf("Posicao: %d,%d\n",p.x,p.y);
   return 0;
}

//------------------------------------------------------------
// Exemplo 14
//------------------------------------------------------------

#include <stdio.h>
#include <math.h>

int main(void) {
   double (*p)(double);
   p = sqrt;
   printf("Raiz: %f\n",p(9));
   return 0;
}

//------------------------------------------------------------
// Exemplo 15
//------------------------------------------------------------

#include <stdio.h>

int cres(int x,int y) { return (x>y); }

int decr(int x,int y) { return (x<y); }

void troca(int *p,int *q) {
   int x = *p; 
   *p = *q; 
   *q = x; 
}

void ordena(int (*cmp)(int,int),int v[],int n) {
   for(int i=1; i<=n-1; i++)
      for(int j=0; j<n-i; j++)
         if( cmp(v[j],v[j+1]) )
            troca(&v[j],&v[j+1]);
}

void exibe(int v[],int n) {
   for(int i=0; i<n; i++)
      printf("%d\n",v[i]);
}

int main(void) {
   int v[5] = {27,55,18,34,47};
   ordena(cres,v,5);
   puts("Ordem crescente:");
   exibe(v,5);
   ordena(decr,v,5);
   puts("Ordem decrescente:");
   exibe(v,5); 
   return 0;
}

//------------------------------------------------------------
// Exercicio 6
//------------------------------------------------------------

#include <stdio.h>

int main(void) {
   Func v[5] = {{561,"Eva Maranhao",9200.00},
                {295,"Ana Teixeira",6100.00},
                {473,"Denise Lagoa",8500.00},
                {102,"Catia Telles",7300.00},
                {384,"Beatriz Lira",5400.00}};
   printf("Ordenar por 1-codigo, 2-nome ou 3-salario? ");
   switch( getchar() ) {
      case '1': ordena(cmp_c,v,5); break;
      case '2': ordena(cmp_n,v,5); break;
      case '3': ordena(cmp_s,v,5); break;
   }
   puts("Tabela ordenada:");
   exibe(v,5);
   return 0;
}

